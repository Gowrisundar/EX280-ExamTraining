[student@workstation ~]$ oc whoami
admin
[student@workstation ~]$ vi .vimrc
[student@workstation ~]$ sudo dnf install httpd-tools
Last metadata expiration check: 0:54:17 ago on Fri Sep  5 00:03:20 2025.
Package httpd-tools-2.4.53-11.el9_2.5.x86_64 is already installed.
Dependencies resolved.
Nothing to do.
Complete!
[student@workstation ~]$ htpasswd -c -B -b htpasswd jobs redhat
Adding password for user jobs
[student@workstation ~]$ htpasswd -b htpasswd woznaik redhat
Adding password for user woznaik
[student@workstation ~]$ cat htpasswd
jobs:$2y$05$DqRZmABLU3dbSWtqpigi/.ol2zESV6xA5LnF0MMG2/1EbSTVp1cVu
woznaik:$apr1$sSU3Gzvl$dbw7s1vxGIXSZ5PU.sCIw1
[student@workstation ~]$ htpasswd -D htpasswd woznaik
Deleting password for user woznaik
[student@workstation ~]$ htpasswd -B -b htpasswd woznaik
Usage:
	htpasswd [-cimBdpsDv] [-C cost] passwordfile username
	htpasswd -b[cmBdpsDv] [-C cost] passwordfile username password

	htpasswd -n[imBdps] [-C cost] username
	htpasswd -nb[mBdps] [-C cost] username password
 -c  Create a new file.
 -n  Don't update file; display results on stdout.
 -b  Use the password from the command line rather than prompting for it.
 -i  Read password from stdin without verification (for script usage).
 -m  Force MD5 encryption of the password (default).
 -2  Force SHA-256 crypt() hash of the password (very secure).
 -5  Force SHA-512 crypt() hash of the password (very secure).
 -B  Force bcrypt encryption of the password (very secure).
 -C  Set the computing time used for the bcrypt algorithm
     (higher is more secure but slower, default: 5, valid: 4 to 17).
 -r  Set the number of rounds used for the SHA-256, SHA-512 algorithms
     (higher is more secure but slower, default: 5000).
 -d  Force CRYPT encryption of the password (8 chars max, insecure).
 -s  Force SHA-1 encryption of the password (insecure).
 -p  Do not encrypt the password (plaintext, insecure).
 -D  Delete the specified user.
 -v  Verify password for the specified user.
On other systems than Windows and NetWare the '-p' flag will probably not work.
The SHA-1 algorithm does not use a salt and is less secure than the MD5 algorithm.
[student@workstation ~]$ htpasswd -B -b htpasswd woznaik redhat
Adding password for user woznaik
[student@workstation ~]$ cat htpasswd 
jobs:$2y$05$DqRZmABLU3dbSWtqpigi/.ol2zESV6xA5LnF0MMG2/1EbSTVp1cVu
woznaik:$2y$05$VlvgUhCmw5EvdcMKb4cH8.bcWi8rZL.dgR2CEd2nJChXm44pONqCW
[student@workstation ~]$ htpasswd -B -b htpasswd collins redhat
Adding password for user collins
[student@workstation ~]$ htpasswd -B -b htpasswd adlerin redhat
Adding password for user adlerin
[student@workstation ~]$ htpasswd -B -b htpasswd armstrong redhat
Adding password for user armstrong
[student@workstation ~]$ oc create secret generic htpass-idp-ex280 \
> --from-file htpasswd=htpasswd -n openshift-config
secret/htpass-idp-ex280 created
[student@workstation ~]$ oc get secrets -n openshift
NAME                       TYPE                                  DATA   AGE
builder-dockercfg-9nspv    kubernetes.io/dockercfg               1      590d
builder-token-xjlcf        kubernetes.io/service-account-token   4      590d
default-dockercfg-lknz4    kubernetes.io/dockercfg               1      590d
default-token-g92cd        kubernetes.io/service-account-token   4      590d
deployer-dockercfg-2t6v9   kubernetes.io/dockercfg               1      590d
deployer-token-kzglh       kubernetes.io/service-account-token   4      590d
[student@workstation ~]$ oc get secrets -n openshift-config
NAME                                      TYPE                                  DATA   AGE
builder-dockercfg-jxq7c                   kubernetes.io/dockercfg               1      590d
builder-token-58gfm                       kubernetes.io/service-account-token   4      590d
classroom-tls                             kubernetes.io/tls                     2      590d
default-dockercfg-4dz88                   kubernetes.io/dockercfg               1      590d
default-token-xgbf2                       kubernetes.io/service-account-token   4      590d
deployer-dockercfg-p79r7                  kubernetes.io/dockercfg               1      590d
deployer-token-kkcdd                      kubernetes.io/service-account-token   4      590d
etcd-client                               kubernetes.io/tls                     2      590d
etcd-metric-client                        kubernetes.io/tls                     2      590d
etcd-metric-signer                        kubernetes.io/tls                     2      590d
etcd-signer                               kubernetes.io/tls                     2      590d
htpass-idp-ex280                          Opaque                                1      16s
htpasswd-secret                           Opaque                                1      590d
initial-service-account-private-key       Opaque                                1      590d
ldap-secret                               Opaque                                1      568d
pull-secret                               kubernetes.io/dockerconfigjson        1      590d
webhook-authentication-integrated-oauth   Opaque                                1      590d
[student@workstation ~]$ oc get oauth cluster -o yaml > oauth.yaml
[student@workstation ~]$ vim oauth.yaml 
[student@workstation ~]$ oc replace -f oauth.yaml 
.ansible/               .rht-labs-dle.log       Templates/
.auth/                  .ssh/                   Videos/
.bash_history           .venv/                  deployment.yaml
.bash_logout            .viminfo                deployment2.yml
.bash_profile           .vimrc                  htpasswd
.bashrc                 DO280/                  in_auth.yaml
.cache/                 Desktop/                info
.config/                Documents/              ingress.yaml
.grading/               Downloads/              newcert
.ipython/               Music/                  oauth.yaml
.jupyter/               Pictures/               project.sh
.kube/                  Public/                 service.yaml
.local/                 README.txt              startSCENARIO.sh
.mozilla/               Scenario_v4.12_1.0/     
.npm/                   Scenario_v4.12_1.0.zip  
[student@workstation ~]$ oc replace -f oauth.yaml
oauth.config.openshift.io/cluster replaced
[student@workstation ~]$ oc get pods -n openshift-authentication
NAME                               READY   STATUS    RESTARTS   AGE
oauth-openshift-767c967767-pf4hv   1/1     Running   0          56m
[student@workstation ~]$ oc get pods -n openshift-authentication -w
NAME                               READY   STATUS    RESTARTS   AGE
oauth-openshift-767c967767-pf4hv   1/1     Running   0          56m
oauth-openshift-767c967767-pf4hv   1/1     Terminating   0          57m
oauth-openshift-f8b6ccfb4-6gfrn    0/1     Pending       0          1s
oauth-openshift-f8b6ccfb4-6gfrn    0/1     Pending       0          1s
oauth-openshift-767c967767-pf4hv   0/1     Terminating   0          57m
oauth-openshift-f8b6ccfb4-6gfrn    0/1     Pending       0          26s
oauth-openshift-f8b6ccfb4-6gfrn    0/1     Pending       0          26s
oauth-openshift-f8b6ccfb4-6gfrn    0/1     ContainerCreating   0          26s
oauth-openshift-767c967767-pf4hv   0/1     Terminating         0          57m
oauth-openshift-767c967767-pf4hv   0/1     Terminating         0          57m
oauth-openshift-767c967767-pf4hv   0/1     Terminating         0          57m
oauth-openshift-f8b6ccfb4-6gfrn    0/1     ContainerCreating   0          27s
oauth-openshift-f8b6ccfb4-6gfrn    0/1     Running             0          27s
oauth-openshift-f8b6ccfb4-6gfrn    1/1     Running             0          28s
^C[student@workstation ~]$ oc get pods -n openshift-authentication
NAME                              READY   STATUS    RESTARTS   AGE
oauth-openshift-f8b6ccfb4-6gfrn   1/1     Running   0          45s
[student@workstation ~]$ oc login -ujobs -predhat
Login successful.

You don't have any projects. You can try to create a new project, by running

    oc new-project <projectname>

[student@workstation ~]$ oc login -uwoznaik -predhat
Login successful.

You don't have any projects. You can try to create a new project, by running

    oc new-project <projectname>

[student@workstation ~]$ oc login -ucollins -predhat
Login successful.

You don't have any projects. You can try to create a new project, by running

    oc new-project <projectname>

[student@workstation ~]$ oc login -uadlerin -predhat
Login successful.

You don't have any projects. You can try to create a new project, by running

    oc new-project <projectname>

[student@workstation ~]$ oc login -uarmstrong -predhat
Login successful.

You don't have any projects. You can try to create a new project, by running

    oc new-project <projectname>

[student@workstation ~]$ oc login -uadmin -predhatocp
Login successful.

You have access to 79 projects, the list has been suppressed. You can list all projects with 'oc projects'

Using project "default".
[student@workstation ~]$ ssh lab@utility
Warning: Permanently added 'utility' (ED25519) to the list of known hosts.
Register this system with Red Hat Insights: insights-client --register
Create an account or view all your systems at https://red.ht/insights-dashboard
Last login: Tue Jan 23 07:08:41 2024 from 172.25.250.254
[lab@utility ~]$ cat ocp4/auth/kube
kubeadmin-password  kubeconfig          kubeconfig-orig     
[lab@utility ~]$ cat ocp4/auth/kube
kubeadmin-password  kubeconfig          kubeconfig-orig     
[lab@utility ~]$ cat ocp4/auth/kube
kubeadmin-password  kubeconfig          kubeconfig-orig     
[lab@utility ~]$ cat ocp4/auth/kubeadmin-password 
GkLhW-tYZIb-GsgvP-oDQVd[lab@utility ~]$ scp ocp4/auth/kubeadmin-password student@workstation /home/student
cp: cannot stat '/home/student/kubeadmin-password': Permission denied
cp: cannot stat 'student@workstation': No such file or directory
[lab@utility ~]$ exit
logout
Connection to utility closed.
[student@workstation ~]$ scp lab@utility:/home/lab/ocp4/auth/kubeadmin-password .
kubeadmin-password                                         100%   23    18.8KB/s   00:00    
[student@workstation ~]$ cat kubeadmin-password 
GkLhW-tYZIb-GsgvP-oDQVd[student@workstation ~]$ 
[student@workstation ~]$ oc login -u kubeadmin -p GkLhW-tYZIb-GsgvP-oDQVd
Login successful.

You have access to 79 projects, the list has been suppressed. You can list all projects with 'oc projects'

Using project "default".
[student@workstation ~]$ oc whoami
kube:admin
[student@workstation ~]$ oc adm policy add-
add-cluster-role-to-group  (Add a role to groups for all projects in the cluster)
add-cluster-role-to-user   (Add a role to users for all projects in the cluster)
add-role-to-group          (Add a role to groups for the project)
add-role-to-user           (Add a role to users or service accounts for the current project)
add-scc-to-group           (Add a security context constraint to groups)
add-scc-to-user            (Add a security context constraint to users or a service account)
[student@workstation ~]$ oc adm policy add-cluster-role-to-user cluster-admin jobs
clusterrole.rbac.authorization.k8s.io/cluster-admin added: "jobs"
[student@workstation ~]$ oc adm policy add-cluster-role-to-user self-provisioner wozniak
Warning: User 'wozniak' not found
clusterrole.rbac.authorization.k8s.io/self-provisioner added: "wozniak"
[student@workstation ~]$ oc adm policy add-cluster-role-to-user self-provisioner woznaik
clusterrole.rbac.authorization.k8s.io/self-provisioner added: "woznaik"
[student@workstation ~]$ oc adm policy remove-cluster-role-from-
remove-cluster-role-from-group  (Remove a role from groups for all projects in the cluster)
remove-cluster-role-from-user   (Remove a role from users for all projects in the cluster)
[student@workstation ~]$ oc adm policy remove-cluster-role-from-
remove-cluster-role-from-group  (Remove a role from groups for all projects in the cluster)
remove-cluster-role-from-user   (Remove a role from users for all projects in the cluster)
[student@workstation ~]$ oc adm policy remove-cluster-role-from-group self-provisioner system:authenticated:oauth
Warning: Your changes may get lost whenever a master is restarted, unless you prevent reconciliation of this rolebinding using the following command: oc annotate clusterrolebinding.rbac self-provisioners 'rbac.authorization.kubernetes.io/autoupdate=false' --overwrite
clusterrole.rbac.authorization.k8s.io/self-provisioner removed: "system:authenticated:oauth"
[student@workstation ~]$ oc get clusterrolebindings -o wide | grep woznaik
self-provisioner-0                                                          ClusterRole/self-provisioner                                                            9m51s   woznaik                                                                                                         
[student@workstation ~]$ oc get clusterrolebindings -o wide | grep armstrong
[student@workstation ~]$ oc adm policy add-cluster-role-to-user cluster-reader woznaik
clusterrole.rbac.authorization.k8s.io/cluster-reader added: "woznaik"
[student@workstation ~]$ oc get clusterrolebindings -o wide | grep woznaik
cluster-reader                                                              ClusterRole/cluster-reader                                                              9s     woznaik                                                                                                         
self-provisioner-0                                                          ClusterRole/self-provisioner                                                            13m    woznaik                                                                                                         
[student@workstation ~]$ oc login -u jobs -p redhat
Login successful.

You have access to 79 projects, the list has been suppressed. You can list all projects with 'oc projects'

Using project "default".
[student@workstation ~]$ oc delete kubeadmin -n kube-system 
error: the server doesn't have a resource type "kubeadmin"
[student@workstation ~]$ oc delete user kubeadmin -n kube-system 
Warning: deleting cluster-scoped resources, not scoped to the provided namespace
Error from server (NotFound): users.user.openshift.io "kubeadmin" not found
[student@workstation ~]$ oc delete secret kubeadmin -n kube-system 
secret "kubeadmin" deleted
[student@workstation ~]$ oc whoami
jobs
[student@workstation ~]$ oc new-project apollo
Now using project "apollo" on server "https://api.ocp4.example.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app rails-postgresql-example

to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=registry.k8s.io/e2e-test-images/agnhost:2.43 -- /agnhost serve-hostname

[student@workstation ~]$ oc new-project titan
Now using project "titan" on server "https://api.ocp4.example.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app rails-postgresql-example

to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=registry.k8s.io/e2e-test-images/agnhost:2.43 -- /agnhost serve-hostname

[student@workstation ~]$ oc new-project gemini
Now using project "gemini" on server "https://api.ocp4.example.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app rails-postgresql-example

to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=registry.k8s.io/e2e-test-images/agnhost:2.43 -- /agnhost serve-hostname

[student@workstation ~]$ oc new-project bluebook
Now using project "bluebook" on server "https://api.ocp4.example.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app rails-postgresql-example

to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=registry.k8s.io/e2e-test-images/agnhost:2.43 -- /agnhost serve-hostname

[student@workstation ~]$ oc new-project apache
Now using project "apache" on server "https://api.ocp4.example.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app rails-postgresql-example

to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=registry.k8s.io/e2e-test-images/agnhost:2.43 -- /agnhost serve-hostname

[student@workstation ~]$ oc policy add-role-to-user admin armstrong -n apollo 
clusterrole.rbac.authorization.k8s.io/admin added: "armstrong"
[student@workstation ~]$ oc policy add-role-to-user admin armstrong -n titan
clusterrole.rbac.authorization.k8s.io/admin added: "armstrong"
[student@workstation ~]$ oc policy add-role-to-user view collins -n apollo 
clusterrole.rbac.authorization.k8s.io/view added: "collins"
[student@workstation ~]$ oc get role
rolebindingrestrictions.authorization.openshift.io
rolebindings.authorization.openshift.io
rolebindings.rbac.authorization.k8s.io
roles.authorization.openshift.io
roles.rbac.authorization.k8s.io
[student@workstation ~]$ oc get rolebinding -o wide -n titan
NAME                    ROLE                               AGE     USERS       GROUPS                         SERVICEACCOUNTS
admin                   ClusterRole/admin                  2m14s   jobs                                       
admin-0                 ClusterRole/admin                  50s     armstrong                                  
system:deployers        ClusterRole/system:deployer        2m13s                                              titan/deployer
system:image-builders   ClusterRole/system:image-builder   2m13s                                              titan/builder
system:image-pullers    ClusterRole/system:image-puller    2m14s               system:serviceaccounts:titan   
[student@workstation ~]$ oc get rolebinding -o wide -n apollo
NAME                    ROLE                               AGE     USERS       GROUPS                          SERVICEACCOUNTS
admin                   ClusterRole/admin                  2m40s   jobs                                        
admin-0                 ClusterRole/admin                  90s     armstrong                                   
system:deployers        ClusterRole/system:deployer        2m40s                                               apollo/deployer
system:image-builders   ClusterRole/system:image-builder   2m40s                                               apollo/builder
system:image-pullers    ClusterRole/system:image-puller    2m40s               system:serviceaccounts:apollo   
view                    ClusterRole/view                   45s     collins                                     
[student@workstation ~]$ oc adm groups new commander
group.user.openshift.io/commander created
[student@workstation ~]$ oc adm groups add-users commander woznaik
group.user.openshift.io/commander added: "woznaik"
[student@workstation ~]$ oc adm groups new pilot
group.user.openshift.io/pilot created
[student@workstation ~]$ oc adm groups add-users pilot adlerin
group.user.openshift.io/pilot added: "adlerin"
[student@workstation ~]$ oc adm policy add-role-to-group edit commander -n apollo
clusterrole.rbac.authorization.k8s.io/edit added: "commander"
[student@workstation ~]$ oc adm policy add-role-to-group edit commander -n titan
clusterrole.rbac.authorization.k8s.io/edit added: "commander"
[student@workstation ~]$ oc adm policy add-role-to-group view pilot -n apollo
clusterrole.rbac.authorization.k8s.io/view added: "pilot"
[student@workstation ~]$ oc get groups
NAME        USERS
commander   woznaik
pilot       adlerin
[student@workstation ~]$ oc get rolebindings -o wide -n apollo

NAME                    ROLE                               AGE     USERS       GROUPS                          SERVICEACCOUNTS
admin                   ClusterRole/admin                  7m      jobs                                        
admin-0                 ClusterRole/admin                  5m50s   armstrong                                   
edit                    ClusterRole/edit                   71s                 commander                       
system:deployers        ClusterRole/system:deployer        7m                                                  apollo/deployer
system:image-builders   ClusterRole/system:image-builder   7m                                                  apollo/builder
system:image-pullers    ClusterRole/system:image-puller    7m                  system:serviceaccounts:apollo   
view                    ClusterRole/view                   5m5s    collins                                     
view-0                  ClusterRole/view                   32s                 pilot                           
[student@workstation ~]$ 
[student@workstation ~]$ oc get rolebindings -o wide -n titan
NAME                    ROLE                               AGE     USERS       GROUPS                         SERVICEACCOUNTS
admin                   ClusterRole/admin                  7m      jobs                                       
admin-0                 ClusterRole/admin                  5m36s   armstrong                                  
edit                    ClusterRole/edit                   79s                 commander                      
system:deployers        ClusterRole/system:deployer        6m59s                                              titan/deployer
system:image-builders   ClusterRole/system:image-builder   6m59s                                              titan/builder
system:image-pullers    ClusterRole/system:image-puller    7m                  system:serviceaccounts:titan   
[student@workstation ~]$ oc project manhattan
error: A project named "manhattan" does not exist on "https://api.ocp4.example.com:6443".
Your projects are:
* apache
* apollo
* apples
* area51
* atlas
* bluebook
* bluewills
* default
* gemini
* gru
* kube-node-lease
* kube-public
* kube-system
* lerna
* math
* metallb-system
* NFS Provisioner (nfs-client-provisioner)
* openshift
* openshift-apiserver
* openshift-apiserver-operator
* openshift-authentication
* openshift-authentication-operator
* openshift-cloud-controller-manager
* openshift-cloud-controller-manager-operator
* openshift-cloud-credential-operator
* openshift-cloud-network-config-controller
* openshift-cluster-csi-drivers
* openshift-cluster-machine-approver
* openshift-cluster-node-tuning-operator
* openshift-cluster-samples-operator
* openshift-cluster-storage-operator
* openshift-cluster-version
* openshift-config
* openshift-config-managed
* openshift-config-operator
* openshift-console
* openshift-console-operator
* openshift-console-user-settings
* openshift-controller-manager
* openshift-controller-manager-operator
* openshift-dns
* openshift-dns-operator
* openshift-etcd
* openshift-etcd-operator
* openshift-host-network
* openshift-image-registry
* openshift-infra
* openshift-ingress
* openshift-ingress-canary
* openshift-ingress-operator
* openshift-insights
* openshift-kni-infra
* openshift-kube-apiserver
* openshift-kube-apiserver-operator
* openshift-kube-controller-manager
* openshift-kube-controller-manager-operator
* openshift-kube-scheduler
* openshift-kube-scheduler-operator
* openshift-kube-storage-version-migrator
* openshift-kube-storage-version-migrator-operator
* openshift-machine-api
* openshift-machine-config-operator
* openshift-marketplace
* openshift-monitoring
* openshift-multus
* openshift-network-diagnostics
* openshift-network-node-identity
* openshift-network-operator
* openshift-node
* openshift-nutanix-infra
* openshift-oauth-apiserver
* openshift-openstack-infra
* openshift-operator-lifecycle-manager
* openshift-operators
* openshift-ovirt-infra
* openshift-ovn-kubernetes
* openshift-route-controller-manager
* openshift-service-ca
* openshift-service-ca-operator
* openshift-storage
* openshift-user-workload-monitoring
* openshift-vsphere-infra
* path-finder
* titan
[student@workstation ~]$ oc new-project manhattan
Now using project "manhattan" on server "https://api.ocp4.example.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app rails-postgresql-example

to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=registry.k8s.io/e2e-test-images/agnhost:2.43 -- /agnhost serve-hostname

[student@workstation ~]$ oc create quota ex280-quota --hard limits.memory=1Gi,limits.cpu=2,replicationcontrollers=3,pods=3,service=6
error: failed to create quota: ResourceQuota "ex280-quota" is invalid: [spec.hard[service]: Invalid value: "service": must be a standard resource type or fully qualified, spec.hard[service]: Invalid value: "service": must be a standard resource for quota]
[student@workstation ~]$ oc create quota ex280-quota --hard limits.memory=1Gi,limits.cpu=2,replicationcontrollers=3,pods=3,services=6
resourcequota/ex280-quota created
[student@workstation ~]$ oc get quota ex280-quota 
NAME          AGE   REQUEST                                                 LIMIT
ex280-quota   18s   pods: 0/3, replicationcontrollers: 0/3, services: 0/6   limits.cpu: 0/2, limits.memory: 0/1Gi
[student@workstation ~]$ oc describe resourcequotas ex280-quota 
Name:                   ex280-quota
Namespace:              manhattan
Resource                Used  Hard
--------                ----  ----
limits.cpu              0     2
limits.memory           0     1Gi
pods                    0     3
replicationcontrollers  0     3
services                0     6
[student@workstation ~]$ oc project blue
bluebook   bluewills  
[student@workstation ~]$ oc project blue
bluebook   bluewills  
[student@workstation ~]$ oc project bluebook 
Now using project "bluebook" on server "https://api.ocp4.example.com:6443".
[student@workstation ~]$ vim limits.yaml
[student@workstation ~]$ oc create -f limits.yaml 
limitrange/ex280-limits created
[student@workstation ~]$ oc get limitranges ex280-limits
NAME           CREATED AT
ex280-limits   2025-09-05T06:05:50Z
[student@workstation ~]$ oc describe limitranges ex280-limits
Name:       ex280-limits
Namespace:  bluebook
Type        Resource  Min    Max    Default Request  Default Limit  Max Limit/Request Ratio
----        --------  ---    ---    ---------------  -------------  -----------------------
Pod         cpu       10m    500m   -                -              -
Pod         memory    100Mi  300Mi  -                -              -
Container   memory    100Mi  300Mi  100Mi            300Mi          -
Container   cpu       10m    500m   100m             500m           -
[student@workstation ~]$ vim limits.yaml 
[student@workstation ~]$ cat limits.yaml 
---
apiVersion: v1
kind: LimitRange
metadata:
  name: ex280-limits
spec:
  limits:
    - type: "Pod"
      max: 
        cpu: 500m
        memory: 300Mi
      min:
        cpu: 10m
        memory: 100Mi
    - type: "Container"
      max: 
        cpu: 500m
        memory: 300Mi
      min:
        cpu: 10m
        memory: 100Mi
      defaultRequest:
        cpu: 100m
        memory: 100Mi
          
[student@workstation ~]$ cat oauth.yaml 
apiVersion: config.openshift.io/v1
kind: OAuth
metadata:
  name: cluster
spec:
  identityProviders:
  - ldap:
      attributes:
        email:
        - mail
        id:
        - dn
        name:
        - cn
        preferredUsername:
        - uid
      bindDN: uid=admin,cn=users,cn=accounts,dc=ocp4,dc=example,dc=com
      bindPassword:
        name: ldap-secret
      ca:
        name: ca-config-map
      insecure: false
      url: ldap://idm.ocp4.example.com/cn=users,cn=accounts,dc=ocp4,dc=example,dc=com?uid
    mappingMethod: claim
    name: Red Hat Identity Management
    type: LDAP
  - htpasswd:
      fileData:
        name: htpass-idp-ex280
    mappingMethod: claim
    name: htpass-ex280
    type: HTPasswd
[student@workstation ~]$ oc pro
process   (Process a template into list of resources)
project   (Switch to another project)
projects  (Display existing projects)
proxy     (Run a proxy to the Kubernetes API server)
[student@workstation ~]$ oc project area51 
Now using project "area51" on server "https://api.ocp4.example.com:6443".
[student@workstation ~]$ oc get pods
No resources found in area51 namespace.
[student@workstation ~]$ oc get all
Warning: apps.openshift.io/v1 DeploymentConfig is deprecated in v4.14+, unavailable in v4.10000+
No resources found in area51 namespace.
[student@workstation ~]$ ll
total 68
drwxr-xr-x. 4 student student   35 Sep  5 00:12 DO280
drwxr-xr-x. 2 student student    6 Jan 23  2024 Desktop
drwxr-xr-x. 2 student student    6 Jan 23  2024 Documents
drwxr-xr-x. 2 student student   36 Sep  5 00:36 Downloads
drwxr-xr-x. 2 student student    6 Jan 23  2024 Music
drwxr-xr-x. 2 student student    6 Jan 23  2024 Pictures
drwxr-xr-x. 2 student student    6 Jan 23  2024 Public
-rw-r--r--. 1 student student  746 Sep  5 00:40 README.txt
drwxr-xr-x. 2 student student 4096 Oct 15  2023 Scenario_v4.12_1.0
-rw-r--r--. 1 student student 5019 Sep  5 00:38 Scenario_v4.12_1.0.zip
drwxr-xr-x. 2 student student    6 Jan 23  2024 Templates
drwxr-xr-x. 2 student student    6 Jan 23  2024 Videos
-rw-r--r--. 1 student student  978 Sep  5 00:40 deployment.yaml
-rw-r--r--. 1 student student 1659 Sep  5 00:40 deployment2.yml
-rw-r--r--. 1 student student  344 Sep  5 01:01 htpasswd
-rw-r--r--. 1 student student   82 Sep  5 00:40 in_auth.yaml
-rw-r--r--. 1 student student   78 Sep  5 00:40 info
-rw-r--r--. 1 student student  335 Sep  5 00:40 ingress.yaml
-rw-r-----. 1 student student   23 Sep  5 01:15 kubeadmin-password
-rw-r--r--. 1 student student  402 Sep  5 02:06 limits.yaml
-rw-r--r--. 1 student student  424 Sep  5 00:40 newcert
-rw-r--r--. 1 student student  724 Sep  5 01:08 oauth.yaml
-rw-r--r--. 1 student student  218 Sep  5 00:40 project.sh
-rw-r--r--. 1 student student  278 Sep  5 00:40 service.yaml
-rwxr--r--. 1 student student 1889 Sep  5 00:40 startSCENARIO.sh
[student@workstation ~]$ chmod a+x newcert
[student@workstation ~]$ ll
total 68
drwxr-xr-x. 4 student student   35 Sep  5 00:12 DO280
drwxr-xr-x. 2 student student    6 Jan 23  2024 Desktop
drwxr-xr-x. 2 student student    6 Jan 23  2024 Documents
drwxr-xr-x. 2 student student   36 Sep  5 00:36 Downloads
drwxr-xr-x. 2 student student    6 Jan 23  2024 Music
drwxr-xr-x. 2 student student    6 Jan 23  2024 Pictures
drwxr-xr-x. 2 student student    6 Jan 23  2024 Public
-rw-r--r--. 1 student student  746 Sep  5 00:40 README.txt
drwxr-xr-x. 2 student student 4096 Oct 15  2023 Scenario_v4.12_1.0
-rw-r--r--. 1 student student 5019 Sep  5 00:38 Scenario_v4.12_1.0.zip
drwxr-xr-x. 2 student student    6 Jan 23  2024 Templates
drwxr-xr-x. 2 student student    6 Jan 23  2024 Videos
-rw-r--r--. 1 student student  978 Sep  5 00:40 deployment.yaml
-rw-r--r--. 1 student student 1659 Sep  5 00:40 deployment2.yml
-rw-r--r--. 1 student student  344 Sep  5 01:01 htpasswd
-rw-r--r--. 1 student student   82 Sep  5 00:40 in_auth.yaml
-rw-r--r--. 1 student student   78 Sep  5 00:40 info
-rw-r--r--. 1 student student  335 Sep  5 00:40 ingress.yaml
-rw-r-----. 1 student student   23 Sep  5 01:15 kubeadmin-password
-rw-r--r--. 1 student student  402 Sep  5 02:06 limits.yaml
-rwxr-xr-x. 1 student student  424 Sep  5 00:40 newcert
-rw-r--r--. 1 student student  724 Sep  5 01:08 oauth.yaml
-rw-r--r--. 1 student student  218 Sep  5 00:40 project.sh
-rw-r--r--. 1 student student  278 Sep  5 00:40 service.yaml
-rwxr--r--. 1 student student 1889 Sep  5 00:40 startSCENARIO.sh
[student@workstation ~]$ cat newcert 
#!/bin/bash
if [ -z "$1" ]
  then
    echo "No argument supplied"
  else
    echo "Creating TLS key-pair.."
      openssl genrsa -out apps-crc.testing.key 2048
    echo "Creating CSR.."
      openssl req -new -key apps-crc.testing.key -out apps-crc.testing.csr -subj $1
    echo "Creating TLS Certificate"
      openssl x509 -req -days 30 -signkey apps-crc.testing.key -in apps-crc.testing.csr -out apps-crc.testing.crt
fi

[student@workstation ~]$ ./newcert
No argument supplied
[student@workstation ~]$ ./newcert "/C=US/ST=NC/L=Raleigh/O=RedHat/OU=RHT/CN=oxcart.apps.oc
> p4.example.com"
Creating TLS key-pair..
Creating CSR..
req: Use -help for summary.
Creating TLS Certificate
Can't open "apps-crc.testing.csr" for reading, No such file or directory
40AC1D0EE77F0000:error:80000002:system library:BIO_new_file:No such file or directory:crypto/bio/bss_file.c:67:calling fopen(apps-crc.testing.csr, r)
40AC1D0EE77F0000:error:10000080:BIO routines:BIO_new_file:no such file:crypto/bio/bss_file.c:75:
Unable to load certificate request input
[student@workstation ~]$ ./newcert "/C=US/ST=NC/L=Raleigh/O=RedHat/OU=RHT/CN=oxcart.apps.ocp4.example.com"
Creating TLS key-pair..
Creating CSR..
Creating TLS Certificate
Certificate request self-signature ok
subject=C = US, ST = NC, L = Raleigh, O = RedHat, OU = RHT, CN = oxcart.apps.ocp4.example.com
[student@workstation ~]$ ll
total 80
drwxr-xr-x. 4 student student   35 Sep  5 00:12 DO280
drwxr-xr-x. 2 student student    6 Jan 23  2024 Desktop
drwxr-xr-x. 2 student student    6 Jan 23  2024 Documents
drwxr-xr-x. 2 student student   36 Sep  5 00:36 Downloads
drwxr-xr-x. 2 student student    6 Jan 23  2024 Music
drwxr-xr-x. 2 student student    6 Jan 23  2024 Pictures
drwxr-xr-x. 2 student student    6 Jan 23  2024 Public
-rw-r--r--. 1 student student  746 Sep  5 00:40 README.txt
drwxr-xr-x. 2 student student 4096 Oct 15  2023 Scenario_v4.12_1.0
-rw-r--r--. 1 student student 5019 Sep  5 00:38 Scenario_v4.12_1.0.zip
drwxr-xr-x. 2 student student    6 Jan 23  2024 Templates
drwxr-xr-x. 2 student student    6 Jan 23  2024 Videos
-rw-r--r--. 1 student student 1245 Sep  5 02:20 apps-crc.testing.crt
-rw-r--r--. 1 student student 1017 Sep  5 02:20 apps-crc.testing.csr
-rw-------. 1 student student 1704 Sep  5 02:20 apps-crc.testing.key
-rw-r--r--. 1 student student  978 Sep  5 00:40 deployment.yaml
-rw-r--r--. 1 student student 1659 Sep  5 00:40 deployment2.yml
-rw-r--r--. 1 student student  344 Sep  5 01:01 htpasswd
-rw-r--r--. 1 student student   82 Sep  5 00:40 in_auth.yaml
-rw-r--r--. 1 student student   78 Sep  5 00:40 info
-rw-r--r--. 1 student student  335 Sep  5 00:40 ingress.yaml
-rw-r-----. 1 student student   23 Sep  5 01:15 kubeadmin-password
-rw-r--r--. 1 student student  402 Sep  5 02:06 limits.yaml
-rwxr-xr-x. 1 student student  424 Sep  5 00:40 newcert
-rw-r--r--. 1 student student  724 Sep  5 01:08 oauth.yaml
-rw-r--r--. 1 student student  218 Sep  5 00:40 project.sh
-rw-r--r--. 1 student student  278 Sep  5 00:40 service.yaml
-rwxr--r--. 1 student student 1889 Sep  5 00:40 startSCENARIO.sh
[student@workstation ~]$ cat startSCENARIO.sh 
#! /bin/bash
#oc login
#oc adm taint node master01 node=worker:NoSchedule
#oc adm taint node master02 node=worker:NoSchedule
#oc adm taint node master03 node=worker:NoSchedule
oc apply -f oauth.yaml
oc delete groups --all
oc label node master01 trek=star --overwrite=true
echo "-----------------Creating Bluewills Project and Resources------------"
oc new-project bluewills
oc new-app --name=rocky demo/openshift-image
oc expose svc rocky
sleep 5


echo "-----------------Creating Bluewills area51 and Resources------------"
oc new-project area51
oc new-app --name=oxcart demo/openshift-image
oc expose svc oxcart --hostname=oxcart.apps.ocp4.example.com
sleep 5

echo "-----------------Creating Lerna Project and Resources------------"
oc new-project lerna
oc new-app --name=hydra demo/openshift-image
sleep 5

echo "-----------------Creating Gru Project and Resources------------"
oc new-project gru
oc new-app --name=scala demo/openshift-image  
sleep 5

echo "-----------------Creating math Project and Resources------------"
oc new-project math
oc new-app --name=qed demo/openshift-image
oc expose svc qed --hostname=qed.apps.ocp4.example.com
sleep 5

echo "-----------------Creating Apples Project and Resources------------"
oc new-project apples
oc new-app --name oranges demo/crashimage
sleep 3
oc delete svc oranges
oc create -f service.yaml
oc expose svc oranges --hostname=oranges.apps.ocp4.example.com
sleep 5

echo "-----------------Creating path-finder Project and Resources------------"
oc new-project path-finder
oc create --save-config -f deployment.yaml
oc expose deployment voyager --port 8080
oc create --save-config -f ingress.yaml
sleep 5

echo "-----------------Creating Atlas Project and Resources------------"
oc new-project atlas
oc create -f deployment2.yml
oc expose deployment mercury --port 8080
oc expose svc mercury --hostname=mercury.apps.ocp4.example.com

[student@workstation ~]$ oc new-app --name=oxcart --image=quay.io/redhattraining/hello-world-nginx
--> Found container image 44eaa13 (6 years old) from quay.io for "quay.io/redhattraining/hello-world-nginx"

    Red Hat Universal Base Image 8 
    ------------------------------ 
    The Universal Base Image is designed and engineered to be the base layer for all of your containerized applications, middleware and utilities. This base image is freely redistributable, but Red Hat only supports Red Hat technologies through subscriptions for Red Hat products. This image is maintained by Red Hat and updated regularly.

    Tags: base rhel8

    * An image stream tag will be created as "oxcart:latest" that will track this image

--> Creating resources ...
    imagestream.image.openshift.io "oxcart" created
    deployment.apps "oxcart" created
    service "oxcart" created
--> Success
    Application is not exposed. You can expose services to the outside world by executing one or more of the commands below:
     'oc expose service/oxcart' 
    Run 'oc status' to view your app.
[student@workstation ~]$ oc get pods
NAME                      READY   STATUS              RESTARTS   AGE
oxcart-566c7d9d6d-922sw   0/1     ContainerCreating   0          5s
[student@workstation ~]$ oc expose service oxcart 
route.route.openshift.io/oxcart exposed
[student@workstation ~]$ oc get route
NAME     HOST/PORT                             PATH   SERVICES   PORT       TERMINATION   WILDCARD
oxcart   oxcart-area51.apps.ocp4.example.com          oxcart     8080-tcp                 None
[student@workstation ~]$ oc delete routes.route.openshift.io oxcart 
route.route.openshift.io "oxcart" deleted
[student@workstation ~]$ oc create route edge --service oxcart --key apps-crc.testing.key --cert apps-crc.testing.crt 
route.route.openshift.io/oxcart created
[student@workstation ~]$ oc get route
NAME     HOST/PORT                             PATH   SERVICES   PORT       TERMINATION   WILDCARD
oxcart   oxcart-area51.apps.ocp4.example.com          oxcart     8080-tcp   edge          None
[student@workstation ~]$ curl -k https://oxcart-area51.apps.ocp4.example.com
<html>
  <body>
    <h1>Hello, world from nginx!</h1>
  </body>
</html>
[student@workstation ~]$ cat newcert
#!/bin/bash
if [ -z "$1" ]
  then
    echo "No argument supplied"
  else
    echo "Creating TLS key-pair.."
      openssl genrsa -out apps-crc.testing.key 2048
    echo "Creating CSR.."
      openssl req -new -key apps-crc.testing.key -out apps-crc.testing.csr -subj $1
    echo "Creating TLS Certificate"
      openssl x509 -req -days 30 -signkey apps-crc.testing.key -in apps-crc.testing.csr -out apps-crc.testing.crt
fi

[student@workstation ~]$ cat startSCENARIO.sh 
#! /bin/bash
#oc login
#oc adm taint node master01 node=worker:NoSchedule
#oc adm taint node master02 node=worker:NoSchedule
#oc adm taint node master03 node=worker:NoSchedule
oc apply -f oauth.yaml
oc delete groups --all
oc label node master01 trek=star --overwrite=true
echo "-----------------Creating Bluewills Project and Resources------------"
oc new-project bluewills
oc new-app --name=rocky demo/openshift-image
oc expose svc rocky
sleep 5


echo "-----------------Creating Bluewills area51 and Resources------------"
oc new-project area51
oc new-app --name=oxcart demo/openshift-image
oc expose svc oxcart --hostname=oxcart.apps.ocp4.example.com
sleep 5

echo "-----------------Creating Lerna Project and Resources------------"
oc new-project lerna
oc new-app --name=hydra demo/openshift-image
sleep 5

echo "-----------------Creating Gru Project and Resources------------"
oc new-project gru
oc new-app --name=scala demo/openshift-image  
sleep 5

echo "-----------------Creating math Project and Resources------------"
oc new-project math
oc new-app --name=qed demo/openshift-image
oc expose svc qed --hostname=qed.apps.ocp4.example.com
sleep 5

echo "-----------------Creating Apples Project and Resources------------"
oc new-project apples
oc new-app --name oranges demo/crashimage
sleep 3
oc delete svc oranges
oc create -f service.yaml
oc expose svc oranges --hostname=oranges.apps.ocp4.example.com
sleep 5

echo "-----------------Creating path-finder Project and Resources------------"
oc new-project path-finder
oc create --save-config -f deployment.yaml
oc expose deployment voyager --port 8080
oc create --save-config -f ingress.yaml
sleep 5

echo "-----------------Creating Atlas Project and Resources------------"
oc new-project atlas
oc create -f deployment2.yml
oc expose deployment mercury --port 8080
oc expose svc mercury --hostname=mercury.apps.ocp4.example.com

[student@workstation ~]$ oc project lerna 
Now using project "lerna" on server "https://api.ocp4.example.com:6443".
[student@workstation ~]$ oc get pods
No resources found in lerna namespace.
[student@workstation ~]$ oc new-app --name=hydra --image=quay.io/redhattraining/hello-world-nginx
--> Found container image 44eaa13 (6 years old) from quay.io for "quay.io/redhattraining/hello-world-nginx"

    Red Hat Universal Base Image 8 
    ------------------------------ 
    The Universal Base Image is designed and engineered to be the base layer for all of your containerized applications, middleware and utilities. This base image is freely redistributable, but Red Hat only supports Red Hat technologies through subscriptions for Red Hat products. This image is maintained by Red Hat and updated regularly.

    Tags: base rhel8

    * An image stream tag will be created as "hydra:latest" that will track this image

--> Creating resources ...
    imagestream.image.openshift.io "hydra" created
    deployment.apps "hydra" created
    service "hydra" created
--> Success
    Application is not exposed. You can expose services to the outside world by executing one or more of the commands below:
     'oc expose service/hydra' 
    Run 'oc status' to view your app.
[student@workstation ~]$ oc get pods
NAME                     READY   STATUS    RESTARTS   AGE
hydra-54487dfc58-cjshd   1/1     Running   0          3s
[student@workstation ~]$ oc scale --replicas=5 deployment hydra
deployment.apps/hydra scaled
[student@workstation ~]$ oc get pods
NAME                     READY   STATUS    RESTARTS   AGE
hydra-54487dfc58-8spnj   1/1     Running   0          7s
hydra-54487dfc58-cjshd   1/1     Running   0          52s
hydra-54487dfc58-glnfm   1/1     Running   0          7s
hydra-54487dfc58-qszlf   1/1     Running   0          7s
hydra-54487dfc58-rfrj8   1/1     Running   0          7s
[student@workstation ~]$ oc get dc
Warning: apps.openshift.io/v1 DeploymentConfig is deprecated in v4.14+, unavailable in v4.10000+
No resources found in lerna namespace.
[student@workstation ~]$ oc get deployment
NAME    READY   UP-TO-DATE   AVAILABLE   AGE
hydra   5/5     5            5           82s
[student@workstation ~]$ #some pods created dc and some pods on deployment, please check and then increase the replica
[student@workstation ~]$ oc pro
process   (Process a template into list of resources)
project   (Switch to another project)
projects  (Display existing projects)
proxy     (Run a proxy to the Kubernetes API server)
[student@workstation ~]$ oc project gru
Now using project "gru" on server "https://api.ocp4.example.com:6443".
[student@workstation ~]$ oc get pods
No resources found in gru namespace.
[student@workstation ~]$ oc new-app --name=scala --image=quay.io/redhattraining/hello-world-nginx
--> Found container image 44eaa13 (6 years old) from quay.io for "quay.io/redhattraining/hello-world-nginx"

    Red Hat Universal Base Image 8 
    ------------------------------ 
    The Universal Base Image is designed and engineered to be the base layer for all of your containerized applications, middleware and utilities. This base image is freely redistributable, but Red Hat only supports Red Hat technologies through subscriptions for Red Hat products. This image is maintained by Red Hat and updated regularly.

    Tags: base rhel8

    * An image stream tag will be created as "scala:latest" that will track this image

--> Creating resources ...
    imagestream.image.openshift.io "scala" created
    deployment.apps "scala" created
    service "scala" created
--> Success
    Application is not exposed. You can expose services to the outside world by executing one or more of the commands below:
     'oc expose service/scala' 
    Run 'oc status' to view your app.
[student@workstation ~]$ oc get pods
NAME                     READY   STATUS    RESTARTS   AGE
scala-7bd84d6b7d-lnxs7   1/1     Running   0          5s
[student@workstation ~]$ oc set resources --re
--recursive        (Process the directory used in -f, --filename recursively. Useful when y…)
--request-timeout  (The length of time to wait before giving up on a single server request.…)
--requests         (The resource requirement requests for this container.  For example, 'cp…)
[student@workstation ~]$ oc set resources --requests cpu=25m --limits cpu=100m deployment scala
deployment.apps/scala resource requirements updated
[student@workstation ~]$ oc aut
auth       (Inspect authorization)
autoscale  (Autoscale a deployment config, deployment, replica set, stateful set, or replic…)
[student@workstation ~]$ oc autoscale --min=6 --max=40 --cpu-percent=60 deployment scala
horizontalpodautoscaler.autoscaling/scala autoscaled
[student@workstation ~]$ oc get hpa
NAME    REFERENCE          TARGETS         MINPODS   MAXPODS   REPLICAS   AGE
scala   Deployment/scala   <unknown>/60%   6         40        0          6s
[student@workstation ~]$ oc get pods
NAME                    READY   STATUS    RESTARTS   AGE
scala-9f487c596-828v5   1/1     Running   0          13s
scala-9f487c596-9xbzp   1/1     Running   0          13s
scala-9f487c596-dmn9q   1/1     Running   0          13s
scala-9f487c596-fhttj   1/1     Running   0          13s
scala-9f487c596-rpw87   1/1     Running   0          13s
scala-9f487c596-zf5mb   1/1     Running   0          93s
[student@workstation ~]$ 
[student@workstation ~]$ ^C
[student@workstation ~]$ ^C
[student@workstation ~]$ ^C
[student@workstation ~]$ ^C
[student@workstation ~]$ oc create se
secret          (Create a secret using specified subcommand)
service         (Create a service using a specified subcommand)
serviceaccount  (Create a service account with the specified name)
[student@workstation ~]$ oc create secret generic magic --from-literal Decoder_Ring=ASDA142hfh-gfrhhueo-erfdk345v
secret/magic created
[student@workstation ~]$ oc get sec
secrets
securitycontextconstraints.security.openshift.io
[student@workstation ~]$ oc get secrets 
NAME                       TYPE                                  DATA   AGE
builder-dockercfg-xg6s6    kubernetes.io/dockercfg               1      132m
builder-token-75blb        kubernetes.io/service-account-token   4      132m
default-dockercfg-xlddr    kubernetes.io/dockercfg               1      132m
default-token-8df7c        kubernetes.io/service-account-token   4      132m
deployer-dockercfg-fk4zz   kubernetes.io/dockercfg               1      132m
deployer-token-98l2j       kubernetes.io/service-account-token   4      132m
magic                      Opaque                                1      20s
[student@workstation ~]$ oc get secrets magic -o yaml
apiVersion: v1
data:
  Decoder_Ring: QVNEQTE0MmhmaC1nZnJoaHVlby1lcmZkazM0NXY=
kind: Secret
metadata:
  creationTimestamp: "2025-09-05T06:53:27Z"
  name: magic
  namespace: math
  resourceVersion: "149623"
  uid: 7c9588ec-09bb-4df1-9b7b-fb7f6d6b51a1
type: Opaque
[student@workstation ~]$ oc describe secrets magic 
Name:         magic
Namespace:    math
Labels:       <none>
Annotations:  <none>

Type:  Opaque

Data
====
Decoder_Ring:  29 bytes
[student@workstation ~]$ oc new-app --name=qed --image=quay.io/redhattraining/hello-world-nginx
--> Found container image 44eaa13 (6 years old) from quay.io for "quay.io/redhattraining/hello-world-nginx"

    Red Hat Universal Base Image 8 
    ------------------------------ 
    The Universal Base Image is designed and engineered to be the base layer for all of your containerized applications, middleware and utilities. This base image is freely redistributable, but Red Hat only supports Red Hat technologies through subscriptions for Red Hat products. This image is maintained by Red Hat and updated regularly.

    Tags: base rhel8

    * An image stream tag will be created as "qed:latest" that will track this image

--> Creating resources ...
    imagestream.image.openshift.io "qed" created
    deployment.apps "qed" created
    service "qed" created
--> Success
    Application is not exposed. You can expose services to the outside world by executing one or more of the commands below:
     'oc expose service/qed' 
    Run 'oc status' to view your app.
[student@workstation ~]$ oc project
Using project "math" on server "https://api.ocp4.example.com:6443".
[student@workstation ~]$ oc set env --from s
service.yaml      startSCENARIO.sh  
[student@workstation ~]$ oc set env --from secret/magic deployment qed
deployment.apps/qed updated
[student@workstation ~]$ oc get pods
pods                 pods.metrics.k8s.io  
[student@workstation ~]$ oc get pods qed-5b85bcccfd-zhvwd | grep -i magic
[student@workstation ~]$ oc get pods qed-5b85bcccfd-zhvwd | grep -i secret
[student@workstation ~]$ oc get pods qed-5b85bcccfd-zhvwd | grep -i environment
[student@workstation ~]$ oc get pods qed-5b85bcccfd-zhvwd | grep -A1 environment
[student@workstation ~]$ oc get pods
NAME                   READY   STATUS    RESTARTS   AGE
qed-5b85bcccfd-zhvwd   1/1     Running   0          65s
[student@workstation ~]$ oc describe pod
poddisruptionbudgets.policy
podmonitors.monitoring.coreos.com
podnetworkconnectivitychecks.controlplane.operator.openshift.io
pods
pods.metrics.k8s.io
podtemplates
[student@workstation ~]$ oc describe pods qed-5b85bcccfd-zhvwd | grep -i environment
    Environment:
[student@workstation ~]$ oc describe pods qed-5b85bcccfd-zhvwd | grep -A1 environment
[student@workstation ~]$ oc describe pods qed-5b85bcccfd-zhvwd | grep -A1 Environment
    Environment:
      DECODER_RING:  <set to the key 'Decoder_Ring' in secret 'magic'>  Optional: false
[student@workstation ~]$ oc describe pods qed-5b85bcccfd-zhvwd
Name:             qed-5b85bcccfd-zhvwd
Namespace:        math
Priority:         0
Service Account:  default
Node:             master01/192.168.50.10
Start Time:       Fri, 05 Sep 2025 02:55:56 -0400
Labels:           deployment=qed
                  pod-template-hash=5b85bcccfd
Annotations:      k8s.ovn.org/pod-networks:
                    {"default":{"ip_addresses":["10.8.0.144/23"],"mac_address":"0a:58:0a:08:00:90","gateway_ips":["10.8.0.1"],"routes":[{"dest":"10.8.0.0/14",...
                  k8s.v1.cni.cncf.io/network-status:
                    [{
                        "name": "ovn-kubernetes",
                        "interface": "eth0",
                        "ips": [
                            "10.8.0.144"
                        ],
                        "mac": "0a:58:0a:08:00:90",
                        "default": true,
                        "dns": {}
                    }]
                  openshift.io/generated-by: OpenShiftNewApp
                  openshift.io/scc: restricted-v2
                  seccomp.security.alpha.kubernetes.io/pod: runtime/default
Status:           Running
SeccompProfile:   RuntimeDefault
IP:               10.8.0.144
IPs:
  IP:           10.8.0.144
Controlled By:  ReplicaSet/qed-5b85bcccfd
Containers:
  qed:
    Container ID:   cri-o://a05660c2d89342502b84126a3890b0d5d5c2773e3754496b129e1fb8aa9f75fc
    Image:          quay.io/redhattraining/hello-world-nginx@sha256:7f99ece5f39bf8d5d76a43cd9104a8d0a39f7135821b94bc1ebdc39cdc6dd63b
    Image ID:       quay.io/redhattraining/hello-world-nginx@sha256:7f99ece5f39bf8d5d76a43cd9104a8d0a39f7135821b94bc1ebdc39cdc6dd63b
    Port:           8080/TCP
    Host Port:      0/TCP
    State:          Running
      Started:      Fri, 05 Sep 2025 02:55:57 -0400
    Ready:          True
    Restart Count:  0
    Environment:
      DECODER_RING:  <set to the key 'Decoder_Ring' in secret 'magic'>  Optional: false
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-m28vz (ro)
Conditions:
  Type              Status
  Initialized       True 
  Ready             True 
  ContainersReady   True 
  PodScheduled      True 
Volumes:
  kube-api-access-m28vz:
    Type:                    Projected (a volume that contains injected data from multiple sources)
    TokenExpirationSeconds:  3607
    ConfigMapName:           kube-root-ca.crt
    ConfigMapOptional:       <nil>
    DownwardAPI:             true
    ConfigMapName:           openshift-service-ca.crt
    ConfigMapOptional:       <nil>
QoS Class:                   BestEffort
Node-Selectors:              <none>
Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
Events:
  Type    Reason          Age    From               Message
  ----    ------          ----   ----               -------
  Normal  Scheduled       2m10s  default-scheduler  Successfully assigned math/qed-5b85bcccfd-zhvwd to master01
  Normal  AddedInterface  2m9s   multus             Add eth0 [10.8.0.144/23] from ovn-kubernetes
  Normal  Pulled          2m9s   kubelet            Container image "quay.io/redhattraining/hello-world-nginx@sha256:7f99ece5f39bf8d5d76a43cd9104a8d0a39f7135821b94bc1ebdc39cdc6dd63b" already present on machine
  Normal  Created         2m9s   kubelet            Created container qed
  Normal  Started         2m9s   kubelet            Started container qed
[student@workstation ~]$ oc create sa ex-280-sa
serviceaccount/ex-280-sa created
[student@workstation ~]$ oc project
Using project "apples" on server "https://api.ocp4.example.com:6443".
[student@workstation ~]$ oc adm po
pod-network  (Manage pod network)
policy       (Manage cluster authorization and security policy)
[student@workstation ~]$ oc adm policy add-scc-to-
add-scc-to-group  (Add a security context constraint to groups)
add-scc-to-user   (Add a security context constraint to users or a service account)
[student@workstation ~]$ oc adm policy add-scc-to-user anyuid -z ex-280-sa
clusterrole.rbac.authorization.k8s.io/system:openshift:scc:anyuid added: "ex-280-sa"
[student@workstation ~]$ podman search nginx
NAME                                                          DESCRIPTION
registry.access.redhat.com/ubi8/nginx-118                     Platform for running nginx 1.18 or building...
registry.access.redhat.com/ubi9/nginx-120                     rhcc_registry.access.redhat.com_ubi9/nginx-1...
registry.access.redhat.com/ubi8/nginx-122                     rhcc_registry.access.redhat.com_ubi8/nginx-1...
registry.access.redhat.com/ubi9/nginx-122                     rhcc_registry.access.redhat.com_ubi9/nginx-1...
registry.access.redhat.com/ubi9/nginx-124                     rhcc_registry.access.redhat.com_ubi9/nginx-1...
registry.access.redhat.com/ubi8/nginx-124                     rhcc_registry.access.redhat.com_ubi8/nginx-1...
registry.access.redhat.com/ubi10/nginx-126                    rhcc_registry.access.redhat.com_ubi10/nginx-...
registry.access.redhat.com/ubi9/nginx-126                     rhcc_registry.access.redhat.com_ubi9/nginx-1...
registry.access.redhat.com/ubi8/nginx-120                     Platform for running nginx 1.20 or building...
registry.access.redhat.com/rhscl/nginx-110-rhel7              Nginx container image that delivers an nginx...
registry.access.redhat.com/rhscl/nginx-16-rhel7               Nginx 1.6 server and a reverse proxy server
registry.access.redhat.com/rhscl/nginx-18-rhel7               Nginx 1.8 server and a reverse proxy server
registry.access.redhat.com/rhscl/nginx-112-rhel7              Nginx is a web server and a reverse proxy se...
registry.access.redhat.com/ubi7/nginx-118                     Platform for running nginx 1.18 or building...
registry.access.redhat.com/ubi7/nginx-120                     Platform for running nginx 1.20 or building...
registry.access.redhat.com/rhscl/nginx-114-rhel7              Nginx is a web server and a reverse proxy se...
registry.access.redhat.com/3scale-amp20/apicast-gateway       3scale's API gateway (APIcast) is an OpenRes...
registry.access.redhat.com/3scale-amp23/apicast-gateway       3scale's API gateway (APIcast) is an OpenRe...
registry.access.redhat.com/rhamp10/apicast-gateway            3scale's API gateway (APIcast) is an OpenRes...
registry.access.redhat.com/3scale-amp20-beta/apicast-gateway  3scale's API gateway (APIcast) is an OpenRes...
registry.access.redhat.com/3scale-amp25/apicast-gateway       3scale's API gateway (APIcast) is an OpenRes...
registry.access.redhat.com/3scale-amp21/apicast-gateway       3scale AMP image used for API gateway
registry.access.redhat.com/3scale-amp24/apicast-gateway       No description
registry.access.redhat.com/rhmap44/wildcard-proxy             RHMAP Docker image that provides mapping and...
registry.access.redhat.com/rhmap45/wildcard-proxy             RHMAP image that provides mapping and proxy...
registry.redhat.io/rhel8/nginx-116                            Platform for running nginx 1.16 or building...
registry.redhat.io/ubi8/nginx-118                             Platform for running nginx 1.18 or building...
registry.redhat.io/rhel8/nginx-120                            Platform for running nginx 1.20 or building...
registry.redhat.io/ubi9/nginx-120                             rhcc_registry.access.redhat.com_ubi9/nginx-1...
registry.redhat.io/ubi8/nginx-122                             rhcc_registry.access.redhat.com_ubi8/nginx-1...
registry.redhat.io/rhel9/nginx-122                            rhcc_registry.access.redhat.com_rhel9/nginx-...
registry.redhat.io/ubi9/nginx-122                             rhcc_registry.access.redhat.com_ubi9/nginx-1...
registry.redhat.io/ubi9/nginx-124                             rhcc_registry.access.redhat.com_ubi9/nginx-1...
registry.redhat.io/rhel8/nginx-124                            rhcc_registry.access.redhat.com_rhel8/nginx-...
registry.redhat.io/ubi8/nginx-124                             rhcc_registry.access.redhat.com_ubi8/nginx-1...
registry.redhat.io/rhel10/nginx-126                           rhcc_registry.access.redhat.com_rhel10/nginx...
registry.redhat.io/ubi10/nginx-126                            rhcc_registry.access.redhat.com_ubi10/nginx-...
registry.redhat.io/ubi9/nginx-126                             rhcc_registry.access.redhat.com_ubi9/nginx-1...
registry.redhat.io/rhel8/nginx-114                            Nginx is a web server and a reverse proxy se...
registry.redhat.io/rhel8/nginx-118                            Platform for running nginx 1.18 or building...
registry.redhat.io/ubi8/nginx-120                             Platform for running nginx 1.20 or building...
registry.redhat.io/rhel9/nginx-120                            rhcc_registry.access.redhat.com_rhel9/nginx-...
registry.redhat.io/rhel8/nginx-122                            rhcc_registry.access.redhat.com_rhel8/nginx-...
registry.redhat.io/rhel9/nginx-124                            rhcc_registry.access.redhat.com_rhel9/nginx-...
registry.redhat.io/rhel9/nginx-126                            rhcc_registry.access.redhat.com_rhel9/nginx-...
registry.redhat.io/rhscl/nginx-110-rhel7                      Nginx container image that delivers an nginx...
registry.redhat.io/rhscl/nginx-16-rhel7                       Nginx 1.6 server and a reverse proxy server
registry.redhat.io/rhscl/nginx-18-rhel7                       Nginx 1.8 server and a reverse proxy server
registry.redhat.io/rhscl/nginx-112-rhel7                      Nginx is a web server and a reverse proxy se...
registry.redhat.io/rhscl/nginx-116-rhel7                      Platform for running nginx 1.16 or building...
docker.io/library/nginx                                       Official build of Nginx.
docker.io/nginx/nginx-ingress                                 NGINX and  NGINX Plus Ingress Controllers fo...
docker.io/nginx/nginx-prometheus-exporter                     NGINX Prometheus Exporter for NGINX and NGIN...
docker.io/nginx/unit                                          This repository is retired, use the Docker o...
docker.io/nginx/nginx-ingress-operator                        NGINX Ingress Operator for NGINX and NGINX P...
docker.io/nginx/docker-extension                              
docker.io/nginx/nginx-quic-qns                                NGINX QUIC interop
docker.io/nginx/nginxaas-loadbalancer-kubernetes              
docker.io/nginx/unit-preview                                  Unit preview features
docker.io/bitnami/nginx                                       Bitnami container image for NGINX
docker.io/ubuntu/nginx                                        Nginx, a high-performance reverse proxy & we...
docker.io/bitnamicharts/nginx                                 Bitnami Helm chart for NGINX Open Source
docker.io/kasmweb/nginx                                       An Nginx image based off nginx:alpine and in...
docker.io/rancher/nginx                                       
docker.io/linuxserver/nginx                                   An Nginx container, brought to you by LinuxS...
docker.io/dtagdevsec/nginx                                    T-Pot Nginx
docker.io/paketobuildpacks/nginx                              
docker.io/vmware/nginx                                        
docker.io/chainguard/nginx                                    Build, ship and run secure software with Cha...
docker.io/gluufederation/nginx                                A customized NGINX image containing a consu...
docker.io/intel/nginx                                         
docker.io/antrea/nginx                                        Nginx server used for Antrea e2e testing
docker.io/circleci/nginx                                      This image is for internal use
docker.io/docksal/nginx                                       Nginx service image for Docksal
docker.io/corpusops/nginx                                     https://github.com/corpusops/docker-images/
[student@workstation ~]$ podman search nginx | grep docker
docker.io/library/nginx                                       Official build of Nginx.
docker.io/nginx/nginx-ingress                                 NGINX and  NGINX Plus Ingress Controllers fo...
docker.io/nginx/nginx-prometheus-exporter                     NGINX Prometheus Exporter for NGINX and NGIN...
docker.io/nginx/unit                                          This repository is retired, use the Docker o...
docker.io/nginx/nginx-ingress-operator                        NGINX Ingress Operator for NGINX and NGINX P...
docker.io/nginx/docker-extension                              
docker.io/nginx/nginx-quic-qns                                NGINX QUIC interop
docker.io/nginx/nginxaas-loadbalancer-kubernetes              
docker.io/nginx/unit-preview                                  Unit preview features
docker.io/bitnami/nginx                                       Bitnami container image for NGINX
docker.io/ubuntu/nginx                                        Nginx, a high-performance reverse proxy & we...
docker.io/bitnamicharts/nginx                                 Bitnami Helm chart for NGINX Open Source
docker.io/kasmweb/nginx                                       An Nginx image based off nginx:alpine and in...
docker.io/rancher/nginx                                       
docker.io/linuxserver/nginx                                   An Nginx container, brought to you by LinuxS...
docker.io/dtagdevsec/nginx                                    T-Pot Nginx
docker.io/paketobuildpacks/nginx                              
docker.io/vmware/nginx                                        
docker.io/chainguard/nginx                                    Build, ship and run secure software with Cha...
docker.io/gluufederation/nginx                                A customized NGINX image containing a consu...
docker.io/intel/nginx                                         
docker.io/antrea/nginx                                        Nginx server used for Antrea e2e testing
docker.io/circleci/nginx                                      This image is for internal use
docker.io/docksal/nginx                                       Nginx service image for Docksal
docker.io/corpusops/nginx                                     https://github.com/corpusops/docker-images/
[student@workstation ~]$ oc new-app --name=oranges --image=docker.io/library/nginx
error: unable to locate any local docker images with name "docker.io/library/nginx"

The 'oc new-app' command will match arguments to the following types:

  1. Images tagged into image streams in the current project or the 'openshift' project
     - if you don't specify a tag, we'll add ':latest'
  2. Images in the container storage, on remote registries, or on the local container engine
  3. Templates in the current project or the 'openshift' project
  4. Git repository URLs or local paths that point to Git repositories

--allow-missing-images can be used to point to an image that does not exist yet.

See 'oc new-app -h' for examples.
[student@workstation ~]$ oc new-app --name=oranges --image=docker.io/library/nginx:latest
error: unable to locate any local docker images with name "docker.io/library/nginx:latest"

The 'oc new-app' command will match arguments to the following types:

  1. Images tagged into image streams in the current project or the 'openshift' project
     - if you don't specify a tag, we'll add ':latest'
  2. Images in the container storage, on remote registries, or on the local container engine
  3. Templates in the current project or the 'openshift' project
  4. Git repository URLs or local paths that point to Git repositories

--allow-missing-images can be used to point to an image that does not exist yet.

See 'oc new-app -h' for examples.
[student@workstation ~]$ oc new-app --name gitlab \
> 
error: You must specify one or more images, image streams, templates, or source code locations to create an application.

To list all local templates and image streams, use:

  oc new-app -L

To search templates, image streams, and container images that match the arguments provided, use:

  oc new-app -S php
  oc new-app -S --template=rails
  oc new-app -S --image-stream=mysql
  oc new-app -S --image=registry.access.redhat.com/ubi8/python-38

For details on how to use the results from those searches to provide images, image streams, templates, or source code locations as inputs into 'oc new-app', use:

  oc help new-app


See 'oc new-app -h' for help and examples
[student@workstation ~]$ oc new-app --name=oranges --image=oc new-app --name gitlab \
> --image registry.ocp4.example.com:8443/redhattraining/git
error: unable to locate any local docker images with name "oc"
error: unable to locate any local docker images with name "registry.ocp4.example.com:8443/redhattraining/git"
error:  local file access failed with: stat new-app: no such file or directory
error: unable to locate any images in image streams, templates loaded in accessible projects, template files, local docker images with name "new-app"

Argument 'new-app' was classified as an image, image~source, or loaded template reference.

The 'oc new-app' command will match arguments to the following types:

  1. Images tagged into image streams in the current project or the 'openshift' project
     - if you don't specify a tag, we'll add ':latest'
  2. Images in the container storage, on remote registries, or on the local container engine
  3. Templates in the current project or the 'openshift' project
  4. Git repository URLs or local paths that point to Git repositories

--allow-missing-images can be used to point to an image that does not exist yet.

See 'oc new-app -h' for examples.
[student@workstation ~]$ oc new-app --name=oranges --image=registry.ocp4.example.com:8443/redhattraining/gitlab-ce:8.4.3-ce.0
--> Found container image 3290b2e (9 years old) from registry.ocp4.example.com:8443 for "registry.ocp4.example.com:8443/redhattraining/gitlab-ce:8.4.3-ce.0"

    * An image stream tag will be created as "oranges:8.4.3-ce.0" that will track this image

--> Creating resources ...
    imagestream.image.openshift.io "oranges" created
    deployment.apps "oranges" created
    error: services "oranges" already exists
--> Failed
[student@workstation ~]$ oc get all
\Warning: apps.openshift.io/v1 DeploymentConfig is deprecated in v4.14+, unavailable in v4.10000+
NAME                           READY   STATUS              RESTARTS   AGE
pod/oranges-7cf8c4c5c4-n7lc2   0/1     ContainerCreating   0          15s

NAME              TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)             AGE
service/oranges   ClusterIP   172.30.43.76   <none>        8080/TCP,8888/TCP   148m

NAME                      READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/oranges   0/1     1            0           15s

NAME                                 DESIRED   CURRENT   READY   AGE
replicaset.apps/oranges-7cf8c4c5c4   1         1         0       15s
replicaset.apps/oranges-cd4d7c55c    1         0         0       15s

NAME                                     IMAGE REPOSITORY                                                  TAGS         UPDATED
imagestream.image.openshift.io/oranges   image-registry.openshift-image-registry.svc:5000/apples/oranges   8.4.3-ce.0   15 seconds ago

NAME                               HOST/PORT                       PATH   SERVICES   PORT       TERMINATION   WILDCARD
route.route.openshift.io/oranges   oranges.apps.ocp4.example.com          oranges    8080-tcp                 None
[student@workstation ~]$ oc get pods
NAME                       READY   STATUS    RESTARTS     AGE
oranges-7cf8c4c5c4-n7lc2   1/1     Running   1 (3s ago)   48s
[student@workstation ~]$ oc delete all
error: resource(s) were provided, but no name was specified
[student@workstation ~]$ oc delete all --se
--selector  (Selector (label query) to filter on, supports '=', '==', and '!='.(e.g. -l key…)
--server    (The address and port of the Kubernetes API server)
[student@workstation ~]$ oc delete all --selector=app=oranges
service "oranges" deleted
deployment.apps "oranges" deleted
Warning: apps.openshift.io/v1 DeploymentConfig is deprecated in v4.14+, unavailable in v4.10000+
imagestream.image.openshift.io "oranges" deleted
route.route.openshift.io "oranges" deleted
[student@workstation ~]$ oc get all
Warning: apps.openshift.io/v1 DeploymentConfig is deprecated in v4.14+, unavailable in v4.10000+
No resources found in apples namespace.
[student@workstation ~]$ oc new-app --name=oranges --image=registry.ocp4.example.com:8443/redhattraining/gitlab-ce:8.4.3-ce.0
--> Found container image 3290b2e (9 years old) from registry.ocp4.example.com:8443 for "registry.ocp4.example.com:8443/redhattraining/gitlab-ce:8.4.3-ce.0"

    * An image stream tag will be created as "oranges:8.4.3-ce.0" that will track this image

--> Creating resources ...
    imagestream.image.openshift.io "oranges" created
    deployment.apps "oranges" created
    service "oranges" created
--> Success
    Application is not exposed. You can expose services to the outside world by executing one or more of the commands below:
     'oc expose service/oranges' 
    Run 'oc status' to view your app.
[student@workstation ~]$ oc get pods
NAME                       READY   STATUS    RESTARTS   AGE
oranges-7cf8c4c5c4-hxqbs   1/1     Running   0          6s
[student@workstation ~]$ oc get pods -W
error: unknown shorthand flag: 'W' in -W
See 'oc get --help' for usage.
[student@workstation ~]$ oc get pods -w
NAME                       READY   STATUS    RESTARTS     AGE
oranges-7cf8c4c5c4-hxqbs   1/1     Running   1 (7s ago)   14s
oranges-7cf8c4c5c4-hxqbs   0/1     Error     1 (8s ago)   15s
oranges-7cf8c4c5c4-hxqbs   0/1     CrashLoopBackOff   1 (16s ago)   30s
oranges-7cf8c4c5c4-hxqbs   1/1     Running            2 (16s ago)   30s
oranges-7cf8c4c5c4-hxqbs   0/1     Error              2 (23s ago)   37s
oranges-7cf8c4c5c4-hxqbs   0/1     CrashLoopBackOff   2 (16s ago)   52s
oranges-7cf8c4c5c4-hxqbs   1/1     Running            3 (29s ago)   65s
oranges-7cf8c4c5c4-hxqbs   0/1     Error              3 (35s ago)   71s
^C[student@workstation ~]$ oc set sa deployment/oranges ex-280-sa
deployment.apps/oranges serviceaccount updated
[student@workstation ~]$ oc get pods
NAME                       READY   STATUS    RESTARTS   AGE
oranges-74d5ddb654-m4mh9   1/1     Running   0          22s
[student@workstation ~]$ oc exp
explain  (Get documentation for a resource)
expose   (Expose a replicated application as a service or route)
[student@workstation ~]$ oc expose service oranges 
route.route.openshift.io/oranges exposed
[student@workstation ~]$ oc edit service oranges 
Edit cancelled, no changes made.
[student@workstation ~]$ 
student@workstation ~]$ oc get events
LAST SEEN   TYPE      REASON              OBJECT                         MESSAGE
160m        Warning   FailedScheduling    pod/mercury-57bf74444-5qvp4    0/1 nodes are available: 1 Insufficient memory. preemption: 0/1 nodes are available: 1 No preemption victims found for incoming pod..
16m         Warning   FailedScheduling    pod/mercury-57bf74444-5qvp4    0/1 nodes are available: 1 Insufficient memory. preemption: 0/1 nodes are available: 1 No preemption victims found for incoming pod..
160m        Normal    SuccessfulCreate    replicaset/mercury-57bf74444   Created pod: mercury-57bf74444-5qvp4
160m        Normal    ScalingReplicaSet   deployment/mercury             Scaled up replica set mercury-57bf74444 to 1
[student@workstation ~]$ oc edit deployment mercury 
deployment.apps/mercury edited
[student@workstation ~]$ oc get pods
NAME                       READY   STATUS              RESTARTS   AGE
mercury-57bf74444-5qvp4    0/1     Pending             0          161m
mercury-6fc977f8f7-467kx   0/1     ContainerCreating   0          19s
[student@workstation ~]$ oc get pods -w
NAME                       READY   STATUS              RESTARTS   AGE
mercury-57bf74444-5qvp4    0/1     Pending             0          161m
mercury-6fc977f8f7-467kx   0/1     ContainerCreating   0          23s
mercury-6fc977f8f7-467kx   1/1     Running             0          32s
mercury-57bf74444-5qvp4    0/1     Terminating         0          161m
mercury-57bf74444-5qvp4    0/1     Terminating         0          161m
^C[student@workstation ~]$ oc get pods
NAME                       READY   STATUS    RESTARTS   AGE
mercury-6fc977f8f7-467kx   1/1     Running   0          48s
[student@workstation ~]$ 

student@workstation ~]$ oc project blue
bluebook   bluewills  
[student@workstation ~]$ oc project bluewills 
Now using project "bluewills" on server "https://api.ocp4.example.com:6443".
[student@workstation ~]$ oc get pods
No resources found in bluewills namespace.
[student@workstation ~]$ oc new-app --name=rocky --image=quay.io/redhattraining/hellow-world-nginx
error: unable to locate any local docker images with name "quay.io/redhattraining/hellow-world-nginx"

The 'oc new-app' command will match arguments to the following types:

  1. Images tagged into image streams in the current project or the 'openshift' project
     - if you don't specify a tag, we'll add ':latest'
  2. Images in the container storage, on remote registries, or on the local container engine
  3. Templates in the current project or the 'openshift' project
  4. Git repository URLs or local paths that point to Git repositories

--allow-missing-images can be used to point to an image that does not exist yet.

See 'oc new-app -h' for examples.
[student@workstation ~]$ oc new-app --name=rocky --image=quay.io/redhattraining/hello-world-nginx
--> Found container image 44eaa13 (6 years old) from quay.io for "quay.io/redhattraining/hello-world-nginx"

    Red Hat Universal Base Image 8 
    ------------------------------ 
    The Universal Base Image is designed and engineered to be the base layer for all of your containerized applications, middleware and utilities. This base image is freely redistributable, but Red Hat only supports Red Hat technologies through subscriptions for Red Hat products. This image is maintained by Red Hat and updated regularly.

    Tags: base rhel8

    * An image stream tag will be created as "rocky:latest" that will track this image

--> Creating resources ...
    imagestream.image.openshift.io "rocky" created
    deployment.apps "rocky" created
    service "rocky" created
--> Success
    Application is not exposed. You can expose services to the outside world by executing one or more of the commands below:
     'oc expose service/rocky' 
    Run 'oc status' to view your app.
[student@workstation ~]$ oc get pods
NAME                    READY   STATUS    RESTARTS   AGE
rocky-d8774f8cd-q776t   1/1     Running   0          3s
[student@workstation ~]$ oc whoami --show-console
https://console-openshift-console.apps.ocp4.example.com
[student@workstation ~]$ oc project
Using project "bluewills" on server "https://api.ocp4.example.com:6443".
[student@workstation ~]$ oc get pods
NAME                    READY   STATUS    RESTARTS   AGE
rocky-d8774f8cd-q776t   1/1     Running   0          6m15s
[student@workstation ~]$ oc get pods -o wide -n atlas
NAME                       READY   STATUS    RESTARTS   AGE   IP           NODE       NOMINATED NODE   READINESS GATES
mercury-6fc977f8f7-467kx   1/1     Running   0          53m   10.8.0.150   master01   <none>           <none>
[student@workstation ~]$ oc rsh rocky-d8774f8cd-q776t
sh-4.4$ curl 10.8.0.150:8080
Hello OpenShift!
sh-4.4$ 


[student@workstation ~]$ oc new-project space
Now using project "space" on server "https://api.ocp4.example.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app rails-postgresql-example

to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=registry.k8s.io/e2e-test-images/agnhost:2.43 -- /agnhost serve-hostname

[student@workstation ~]$ oc whoami
jobs
[student@workstation ~]$ oc new-app --name=gamma --image=quay.io/redhattraining/hello-world-nginx
--> Found container image 44eaa13 (6 years old) from quay.io for "quay.io/redhattraining/hello-world-nginx"

    Red Hat Universal Base Image 8 
    ------------------------------ 
    The Universal Base Image is designed and engineered to be the base layer for all of your containerized applications, middleware and utilities. This base image is freely redistributable, but Red Hat only supports Red Hat technologies through subscriptions for Red Hat products. This image is maintained by Red Hat and updated regularly.

    Tags: base rhel8

    * An image stream tag will be created as "gamma:latest" that will track this image

--> Creating resources ...
    imagestream.image.openshift.io "gamma" created
    deployment.apps "gamma" created
    service "gamma" created
--> Success
    Application is not exposed. You can expose services to the outside world by executing one or more of the commands below:
     'oc expose service/gamma' 
    Run 'oc status' to view your app.
[student@workstation ~]$ oc get sc
NAME                    PROVISIONER                                   RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE
lvms-vg1                topolvm.io                                    Delete          WaitForFirstConsumer   true                   568d
nfs-storage (default)   k8s-sigs.io/nfs-subdir-external-provisioner   Delete          Immediate              false                  590d
[student@workstation ~]$ oc describe sc
Name:                  lvms-vg1
IsDefaultClass:        No
Annotations:           description=Provides RWO and RWOP Filesystem & Block volumes
Provisioner:           topolvm.io
Parameters:            csi.storage.k8s.io/fstype=xfs,topolvm.io/device-class=vg1
AllowVolumeExpansion:  True
MountOptions:          <none>
ReclaimPolicy:         Delete
VolumeBindingMode:     WaitForFirstConsumer
Events:                <none>


Name:                  nfs-storage
IsDefaultClass:        Yes
Annotations:           storageclass.kubernetes.io/is-default-class=true
Provisioner:           k8s-sigs.io/nfs-subdir-external-provisioner
Parameters:            archiveOnDelete=false
AllowVolumeExpansion:  <unset>
MountOptions:          <none>
ReclaimPolicy:         Delete
VolumeBindingMode:     Immediate
Events:                <none>
[student@workstation ~]$ oc describe sc nfs-storage
Name:                  nfs-storage
IsDefaultClass:        Yes
Annotations:           storageclass.kubernetes.io/is-default-class=true
Provisioner:           k8s-sigs.io/nfs-subdir-external-provisioner
Parameters:            archiveOnDelete=false
AllowVolumeExpansion:  <unset>
MountOptions:          <none>
ReclaimPolicy:         Delete
VolumeBindingMode:     Immediate
Events:                <none>
[student@workstation ~]$ oc get sc nfs-storage -o yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
  creationTimestamp: "2024-01-23T12:24:31Z"
  name: nfs-storage
  resourceVersion: "18797"
  uid: 221c980f-eac2-4aaf-a05c-eed8922bd600
parameters:
  archiveOnDelete: "false"
provisioner: k8s-sigs.io/nfs-subdir-external-provisioner
reclaimPolicy: Delete
volumeBindingMode: Immediate
[student@workstation ~]$ oc get pv
NAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM                                     STORAGECLASS   REASON   AGE
gamma-pv                                   1Gi        RWX            Delete           Available                                             slow                    12s
pvc-102bb7ea-59ac-46ca-ba2f-dab2d6b9b0d9   20Gi       RWX            Delete           Bound       openshift-image-registry/registry-claim   nfs-storage             590d
[student@workstation ~]$ oc get pv
NAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                                     STORAGECLASS   REASON   AGE
gamma-pv                                   1Gi        RWX            Delete           Bound    space/gamma-pvc                           slow                    2m8s
pvc-102bb7ea-59ac-46ca-ba2f-dab2d6b9b0d9   20Gi       RWX            Delete           Bound    openshift-image-registry/registry-claim   nfs-storage             590d
[student@workstation ~]$ oc get pvc
NAME        STATUS   VOLUME     CAPACITY   ACCESS MODES   STORAGECLASS   AGE
gamma-pvc   Bound    gamma-pv   1Gi        RWX            slow           28s
[student@workstation ~]$ oc set volumes --type pvc --claim-name gamma-pvc --claim-size 1Gi --claim-
--claim-class  (StorageClass to use for the persistent volume claim)
--claim-mode   (Set the access mode of the claim to be created. Valid values are ReadWriteO…)
[student@workstation ~]$ oc set volumes --type pvc --claim-name gamma-pvc --claim-size 1Gi --claim-
--claim-class  (StorageClass to use for the persistent volume claim)
--claim-mode   (Set the access mode of the claim to be created. Valid values are ReadWriteO…)
[student@workstation ~]$ oc set volumes --type pvc --claim-name gamma-pvc --claim-size 1Gi --claim-
--claim-class  (StorageClass to use for the persistent volume claim)
--claim-mode   (Set the access mode of the claim to be created. Valid values are ReadWriteO…)
[student@workstation ~]$ oc set volumes --type pvc --claim-name gamma-pvc --claim-size 1Gi --claim-mode ReadWriteMany --mount-path /srv deployment gamma
error: --type|--path|--configmap-name|--secret-name|--claim-name|--source|--default-mode|--overwrite are only valid for --add operation
[student@workstation ~]$ oc set volumes --type pvc --claim-name gamma-pvc --claim-size 1Gi --claim-mode ReadWriteMany --add --mount-path /srv deployment gamma
info: Generated volume name: volume-m759f
deployment.apps/gamma volume updated
error: failed to patch volume update to pod template: persistentvolumeclaims "gamma-pvc" already exists
[student@workstation ~]$ oc rsh gamma-6659b55ff4-xc2fg
sh-4.4$ df -h
Filesystem                    Size  Used Avail Use% Mounted on
overlay                        50G   25G   25G  50% /
tmpfs                          64M     0   64M   0% /dev
shm                            64M     0   64M   0% /dev/shm
tmpfs                         3.2G   93M  3.1G   3% /etc/passwd
192.168.50.254:/exports-ocp4   40G  852M   40G   3% /srv
/dev/vda4                      50G   25G   25G  50% /etc/hosts
tmpfs                          15G   24K   15G   1% /run/secrets/kubernetes.io/serviceaccount
tmpfs                         7.9G     0  7.9G   0% /proc/acpi
tmpfs                         7.9G     0  7.9G   0% /proc/scsi
tmpfs                         7.9G     0  7.9G   0% /sys/firmware
sh-4.4$ 

[student@workstation ~]$ oc get pods -n openshift-file-integrity file-integrity-operator-8699895f77-mhhxz 
NAME                                       READY   STATUS    RESTARTS       AGE
file-integrity-operator-8699895f77-mhhxz   1/1     Running   1 (3m5s ago)   3m14s
[student@workstation ~]$ 
[student@workstation ~]$ oc new-project charts-development
Now using project "charts-development" on server "https://api.ocp4.example.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app rails-postgresql-example

to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=registry.k8s.io/e2e-test-images/agnhost:2.43 -- /agnhost serve-hostname

[student@workstation ~]$ helm re
registry  (login to or logout from a registry)
repo      (add, list, remove, update, and index chart repositories)
[student@workstation ~]$ helm re
registry  (login to or logout from a registry)
repo      (add, list, remove, update, and index chart repositories)
[student@workstation ~]$ helm repo add http://helm.ocp4.example.com/charts
Error: "helm repo add" requires 2 arguments

Usage:  helm repo add [NAME] [URL] [flags]
[student@workstation ~]$ helm repo add myrepo http://helm.ocp4.example.com/charts 
"myrepo" has been added to your repositories
[student@workstation ~]$ helm repo list
NAME  	URL                                
myrepo	http://helm.ocp4.example.com/charts
[student@workstation ~]$ helm search repo --versions 
NAME                   	CHART VERSION	APP VERSION	DESCRIPTION                                       
myrepo/etherpad        	0.0.7        	latest     	A Helm chart for etherpad lite                    
myrepo/etherpad        	0.0.6        	latest     	A Helm chart for etherpad lite                    
myrepo/examplechart    	0.1.0        	           	A Helm chart for Kubernetes                       
myrepo/influxdb        	4.12.1       	1.8.10     	Scalable datastore for metrics, events, and rea...
myrepo/mysql-persistent	0.0.2        	0.0.2      	This content is expermental, do not use it in p...
[student@workstation ~]$ tree
.
├── DO280
│   ├── labs
│   │   └── auth-providers
│   │       └── oauth.yaml
│   └── solutions
│       └── auth-providers
│           └── oauth.yaml
├── Desktop
├── Documents
├── Downloads
│   └── Scenario_v4.12_1.0.zip
├── Music
├── Pictures
├── Public
├── README.txt
├── Scenario_v4.12_1.0
│   ├── README.txt
│   ├── deployment.yaml
│   ├── deployment2.yml
│   ├── in_auth.yaml
│   ├── info
│   ├── ingress.yaml
│   ├── newcert
│   ├── oauth.yaml
│   ├── project.sh
│   ├── service.yaml
│   └── startSCENARIO.sh
├── Scenario_v4.12_1.0.zip
├── Templates
├── Videos
├── apps-crc.testing.crt
├── apps-crc.testing.csr
├── apps-crc.testing.key
├── deployment.yaml
├── deployment2.yml
├── htpasswd
├── in_auth.yaml
├── info
├── ingress.yaml
├── kubeadmin-password
├── limits.yaml
├── newcert
├── oauth.yaml
├── project.sh
├── service.yaml
└── startSCENARIO.sh

14 directories, 32 files
[student@workstation ~]$ helm tree
Error: unknown command "tree" for "helm"
Run 'helm --help' for usage.
[student@workstation ~]$ helm show values myrepo/values.yaml
Error: chart "values.yaml" matching  not found in myrepo index. (try 'helm repo update'): no chart name found
[student@workstation ~]$ helm show values myrepo/etherpad 
# Default values for etherpad.
replicaCount: 1

defaultTitle: "Labs Etherpad"
defaultText: "✍️ Assign yourself a user and share your ideas! ✍️"

image:
  repository: etherpad
  name:
  tag:
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podSecurityContext: {}
securityContext: {}

service:
  type: ClusterIP
  port: 9001

ingress:
  enabled: false
  hosts:
    - name: etherpad.organization.com
  annotations: {}

route:
  enabled: true
  host: null
  targetPort: http

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  enabled: true
  annotations: {}
  storageClass:
  accessMode: ReadWriteOnce
  size: 1Gi
  mountPath: /opt/etherpad-lite/var

[student@workstation ~]$ vim values.yaml
[student@workstation ~]$ helm install etherpad myrepo/etherpad -f values.yaml 
NAME: etherpad
LAST DEPLOYED: Fri Sep  5 05:26:37 2025
NAMESPACE: charts-development
STATUS: deployed
REVISION: 1
TEST SUITE: None
[student@workstation ~]$ 
[student@workstation ~]$ oc get pods
NAME                       READY   STATUS              RESTARTS   AGE
etherpad-8bd65d879-n94jt   0/1     ContainerCreating   0          5s
[student@workstation ~]$ oc get routes
NAME       HOST/PORT                                           PATH   SERVICES   PORT   TERMINATION     WILDCARD
etherpad   etherpad-charts-development.apps.ocp4.example.com          etherpad   http   edge/Redirect   None
[student@workstation ~]$ oc get pods
NAME                       READY   STATUS              RESTARTS   AGE
etherpad-8bd65d879-n94jt   0/1     ContainerCreating   0          14s
[student@workstation ~]$ oc get pods -w
NAME                       READY   STATUS              RESTARTS   AGE
etherpad-8bd65d879-n94jt   0/1     ContainerCreating   0          18s
etherpad-8bd65d879-n94jt   0/1     Running             0          24s
^C[student@workstation ~]$ 





